{"version":3,"sources":["webpack:///./src/components/InterestingCard/index.js","webpack:///./src/components/ArticleCard/index.js","webpack:///./src/pages/index.js"],"names":["Box","styled","div","props","perspective","InterestingCard","children","boxRef","useRef","bodyRef","mousemoveFn","e","body","centerX","offsetLeft","offsetWidth","centerY","offsetTop","offsetHeight","percentageX","clientX","percentageY","clientY","style","transform","mouseLeaveFn","useEffect","box","current","onmousemove","onmouseleave","ref","Container","ImageContainer","banner","TextContainer","Title","Description","ArticleFooter","Line","DateText","BanerTitle","BannerText","ArticleCard","list","map","node","to","fields","slug","frontmatter","title","excerpt","date","ArticleContainer","AuthorInfo","query","connect","state","isDarkMode","app","data","dispatch","console","log","Layout","LeftNavCard","allMarkdownRemark","edges"],"mappings":"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","file":"component---src-pages-index-js-d18702c672e2f9ace0c8.js","sourcesContent":["import React, { useEffect, useRef } from \"react\"\nimport styled from \"styled-components\"\n\nconst Box = styled.div`\n  /*perspective  是css透视属性 这个效果实现的关键 而且要加在父级*/\n  perspective: ${props => props.perspective}px;\n`\n\nconst InterestingCard = ({ children, perspective }) => {\n  const boxRef = useRef(null)\n  const bodyRef = useRef(null)\n\n  const mousemoveFn = (e, body) => {\n    //获取banner的X轴的中心 和 y轴的中心\n    var centerX = body.offsetLeft + body.offsetWidth / 2\n    var centerY = body.offsetTop + body.offsetHeight / 2\n\n    //获取鼠标到中心的位置距离\n    //e.page指鼠标到banner到边缘的位置\n    var deltaX = e.clientX - centerX\n    var deltaY = e.clientY - centerY\n\n    //获取鼠标到中心距离与中心长度的比率 距离中心越远比越大 倾斜角度越大\n    var percentageX = deltaX / centerX\n    var percentageY = deltaY / centerY\n    //常数\n    var deg = 10\n\n    //个人觉得X轴旋转用Y轴的比率 y轴的旋转倾斜角度用X轴的比率  这样可用无视正负 都是有向下倾斜的感觉\n    body.style.transform =\n      \"rotateX(\" +\n      percentageY * -deg +\n      \"deg)\" +\n      \"rotateY(\" +\n      percentageX * deg +\n      \"deg)\"\n  }\n\n  const mouseLeaveFn = (e, body) => {\n    body.style.transform = \"\"\n  }\n\n  useEffect(() => {\n    const box = boxRef.current\n    const body = bodyRef.current\n    box.onmousemove = e => {\n      mousemoveFn(e, body)\n    }\n    box.onmouseleave = e => {\n      mouseLeaveFn(e, body)\n    }\n\n    return () => {\n      box.onmousemove = null\n      box.onmouseleave = null\n    }\n  }, [mouseLeaveFn, mousemoveFn, boxRef, bodyRef])\n\n  return (\n    <>\n      <Box ref={boxRef} perspective={perspective}>\n        <div ref={bodyRef}>{children}</div>\n      </Box>\n    </>\n  )\n}\n\nexport default InterestingCard\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nimport InterestingCard from \"../InterestingCard/index\"\n\nconst Container = styled.div`\n  background: #fff;\n  border-radius: 0.5rem;\n  margin-bottom: 1rem;\n`\n\nconst ImageContainer = styled.div`\n  background: url(${props => props.banner}) no-repeat center center;\n  background-size: cover;\n  height: 15rem;\n  border-radius: 0.5rem 0.5rem 0 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst TextContainer = styled.div`\n  padding: 0.5rem 2rem;\n  display: flex;\n  flex-flow: column nowrap;\n`\n\nconst Title = styled.div`\n  font-size: 1rem;\n  line-height: 2.5rem;\n  position: relative;\n  padding: 1rem 0;\n  cursor: pointer;\n\n  ::after {\n    content: \"\";\n    background: #decb4c;\n    content: \"\";\n    display: inline-block;\n    width: 2rem;\n    height: 0.1rem;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    margin-bottom: 1rem;\n  }\n\n  :hover {\n    text-decoration: underline;\n  }\n`\n\nconst Description = styled.div`\n  font-size: 0.8rem;\n  overflow: hidden;\n  flex: 1;\n`\nconst ArticleFooter = styled.div`\n  padding: 0 2rem 0.5rem 2rem;\n`\n\nconst Line = styled.div`\n  border-top: 1px solid #ececec;\n`\n\nconst DateText = styled.div`\n  color: #989b9d;\n  padding: 1rem 0;\n  font-size: 0.8rem;\n`\n\nconst BanerTitle = styled.div`\n  flex-flow: column nowrap;\n  font-family: \"Oswald\", sans-serif;\n  color: #000;\n  font-size: 1.5rem;\n  height: 50%;\n  min-width: 60%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0.5rem double;\n  border-color: rgba(255, 255, 255, 0.8);\n  margin: 1rem;\n\n  @media (max-width: 800px) {\n    display: none;\n  }\n`\n\nconst BannerText = styled.div`\n  padding: 2rem;\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.8);\n  width: 100%;\n  font-size: 1rem;\n`\n\nconst ArticleCard = ({ list }) => {\n  return (\n    <>\n      {list.map(({ node }) => (\n        <InterestingCard perspective={2000}>\n          <Container>\n            <Link to={node.fields.slug}>\n              <ImageContainer banner={node.frontmatter.banner}>\n                <BanerTitle>\n                  <BannerText>{node.frontmatter.title}</BannerText>\n                </BanerTitle>\n              </ImageContainer>\n            </Link>\n            <TextContainer>\n              <Link to={node.fields.slug}>\n                <Title>{node.frontmatter.title}</Title>\n              </Link>\n              <Description>{node.excerpt}</Description>\n            </TextContainer>\n            <ArticleFooter>\n              <Line />\n              <DateText>{node.frontmatter.date}</DateText>\n            </ArticleFooter>\n          </Container>\n        </InterestingCard>\n      ))}\n    </>\n  )\n}\n\nexport default ArticleCard\n","import React from \"react\"\nimport Layout from \"../components/Layout/index.js\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { connect } from \"react-redux\"\n\nimport ArticleCard from \"../components/ArticleCard/index.js\"\nimport LeftNavCard from \"../components/LeftNavCard/index.js\"\n\nimport { toggleDarkMode } from \"../state/app\"\n\nconst ArticleContainer = styled.div`\n  flex: 1;\n  margin-left: 1rem;\n`\n\nconst AuthorInfo = styled.div`\n  @media (max-width: 800px) {\n    display: none;\n  }\n`\n\nconst Index = ({ data, isDarkMode, dispatch }) => {\n  console.log(isDarkMode, dispatch)\n  return (\n    <>\n      <Layout>\n        <AuthorInfo>\n          <LeftNavCard data={data} />\n        </AuthorInfo>\n        <ArticleContainer>\n          <ArticleCard list={data.allMarkdownRemark.edges} />\n        </ArticleContainer>\n      </Layout>\n    </>\n  )\n}\n\nexport default connect(\n  state => ({\n    isDarkMode: state.app.isDarkMode,\n  }),\n  null\n)(Index)\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          github\n          juejin\n          twitter\n          email\n        }\n      }\n    }\n    allMarkdownRemark(limit: 10) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tag\n            banner\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n    allTags: allMarkdownRemark(filter: { frontmatter: { tag: { ne: null } } }) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            tag\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}