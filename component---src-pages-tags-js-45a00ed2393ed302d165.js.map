{"version":3,"sources":["webpack:///./src/components/layout/styles.js","webpack:///./src/components/layout/index.js","webpack:///./src/pages/tags.js","webpack:///./src/utils/utils.js"],"names":["Container","styled","div","rhythm","Header","header","WebsiteHeaderText","activeLink","borderBottom","LinkStyle","li","props","activeColor","Body","UlBox","ul","BreadMenuContainer","ListLink","activeStyle","to","children","ConnectLayout","connect","state","ownProps","articles","_allArticles","dispatch","setAllArticles","setArticles","setAuthor","authorInfo","setAuthorInfo","useState","navMenuStatus","setNavMenuStatus","data","site","siteMetadata","author","allMarkdownRemark","edges","title","class","onClick","Drawer","visibility","onClose","NavMenu","TagsTitle","h3","query","allTag","allTags","map","node","frontmatter","tag","reduce","result","current","includes","push","onClickTag","Tags","list","clickEvent"],"mappings":"wMAIaA,G,UAAYC,IAAOC,IAAV,wEAAGD,CAAH,+DAGTE,YAAO,GACHA,YAAO,OAGXC,EAASH,IAAOI,OAAV,qEAAGJ,CAAH,sEAMNK,EAAoBL,IAAOC,IAAV,gFAAGD,CAAH,0DAMjBM,EAAa,CACxBC,aAAc,6BAGHC,EAAYR,IAAOS,GAAV,wEAAGT,CAAH,sLAEJE,YAAO,MAKM,SAAAQ,GAAK,OAAIA,EAAMC,aAAe,qBAYhDC,EAAOZ,IAAOC,IAAV,mEAAGD,CAAH,8BAKJa,EAAQb,IAAOc,GAAV,oEAAGd,CAAH,0EASLe,EAAqBf,IAAOC,IAAV,iFAAGD,CAAH,kE,oCCzCzBgB,EAAW,SAAAN,GAAK,OACpB,kBAACF,EAAD,KACE,kBAAC,IAAD,CAAMS,YAAaX,EAAYY,GAAIR,EAAMQ,IACtC,IACAR,EAAMS,SAAU,OAqGjBC,EAAgBC,aAPE,SAACC,EAAOC,GAC9B,OAAO,OAAP,UACKA,EADL,CAEEC,SAAUF,EAAMG,aAAaD,cAfN,SAAAE,GACzB,MAAO,CACLC,eAAgB,SAAAH,GACdE,EAASE,YAAYJ,KAEvBK,UAAW,SAAAC,GACTJ,EAASK,YAAcD,QAaPT,EAhGP,SAACX,GAAW,IACjBS,EAAwCT,EAAxCS,SAAUQ,EAA8BjB,EAA9BiB,eAAgBE,EAAcnB,EAAdmB,UADV,EAEkBG,oBAAS,GAA5CC,EAFiB,KAEFC,EAFE,KAGlBC,EAAI,OAuCV,OAHAN,EAAUM,EAAKC,KAAKC,aAAaC,QACjCX,EAAeQ,EAAKI,kBAAkBC,OAGpC,kBAACzC,EAAD,KACE,kBAACI,EAAD,KACE,kBAACE,EAAD,KACE,kBAAC,IAAD,CAAMa,GAAG,KACP,gCAAMiB,EAAKC,KAAKC,aAAaI,MAA7B,OAGJ,kBAAC5B,EAAD,KACE,kBAAC,EAAD,CAAUK,GAAG,UAAb,MACA,kBAAC,EAAD,CAAUA,GAAG,iBAAb,MACA,kBAAC,EAAD,CAAUA,GAAG,WAAb,SAEF,kBAACH,EAAD,KACE,uBACE2B,MAAM,cACNC,QAAS,WACPT,GAAiB,OAIvB,kBAACU,EAAA,EAAD,CACEC,WAAYZ,EACZa,QAAS,WACPZ,GAAiB,KAGnB,kBAACa,EAAA,EAAD,QAGJ,kBAACnC,EAAD,KAAOO,OA6BEC,O,0HCjIf,sCAOA,IAAM4B,EAAYhD,IAAOiD,GAAV,sEAAGjD,CAAH,+EAOTD,EAAYC,IAAOC,IAAV,sEAAGD,CAAH,+CAwBFkD,GAlBE,sBAAe,IAAZf,EAAW,EAAXA,KACVgB,EACJhB,EAAKiB,QAAQZ,MAAMa,KAAI,qBAAGC,KAAgBC,YAAYC,OCnBpDC,QAAO,SAACC,EAAQC,GAKlB,OAJKD,EAAOE,SAASD,IACnBD,EAAOG,KAAKF,GAGPD,IACN,IDgBGI,EAAa,SAAAN,KAGnB,OACE,kBAAC,IAAD,KACE,kBAACzD,EAAD,KACE,kBAACiD,EAAD,CAAWL,QAASmB,GAApB,YACA,kBAACC,EAAA,EAAD,CAAMC,KAAMb,EAAQc,WAAYH,OAMtB","file":"component---src-pages-tags-js-45a00ed2393ed302d165.js","sourcesContent":["import styled from \"styled-components\"\nimport { rhythm } from \"../../utils/typography\"\nimport \"@fortawesome/fontawesome-free/css/all.css\"\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 60rem;\n  padding: ${rhythm(1)};\n  padding-top: ${rhythm(1.5)};\n`\n\nexport const Header = styled.header`\n  margin-bottom: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport const WebsiteHeaderText = styled.div`\n  text-shadow: none;\n  background-image: none;\n  display: flex;\n`\n\nexport const activeLink = {\n  borderBottom: \"3px solid rgb(238,207,85)\",\n}\n\nexport const LinkStyle = styled.li`\n  text-transform: uppercase;\n  margin-right: ${rhythm(1.5)};\n  position: relative;\n\n  ::after {\n    content: \"\";\n    border-bottom: 3px solid ${props => props.activeColor || \"rgb(238,207,85)\"};\n    width: 0;\n    display: flex;\n    transition: all 0.2s;\n  }\n\n  :hover {\n    ::after {\n      width: 100%;\n    }\n  }\n`\nexport const Body = styled.div`\n  width: 100%;\n  display: flex;\n`\n\nexport const UlBox = styled.ul`\n  list-style: none;\n  display: flex;\n\n  @media (max-width: 800px) {\n    display: none;\n  }\n`\n\nexport const BreadMenuContainer = styled.div`\n  display: none;\n\n  @media (max-width: 800px) {\n    display: inline-block;\n  }\n`\n","import React, { useState } from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\nimport { connect } from 'react-redux'\nimport NavMenu from \"../NavMenu/index.js\"\nimport {\n  Container,\n  Header,\n  WebsiteHeaderText,\n  LinkStyle,\n  Body,\n  UlBox,\n  BreadMenuContainer,\n  activeLink,\n} from \"./styles.js\"\nimport { setArticles } from '../../state/allArticles/index'\nimport { setAuthorInfo } from '../../state/siteMeta/index'\nimport Drawer from \"../Drawer/index.js\"\n\n// 文章布局， 带导航栏\nconst ListLink = props => (\n  <LinkStyle>\n    <Link activeStyle={activeLink} to={props.to}>\n      {\" \"}\n      {props.children}{\" \"}\n    </Link>\n  </LinkStyle>\n)\n\nconst Layout = (props) => {\n  const { children, setAllArticles, setAuthor } = props;\n  const [navMenuStatus, setNavMenuStatus] = useState(false)\n  const data = useStaticQuery(\n    graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author {\n            name\n            github\n            juejin\n            twitter\n            email\n          }\n        }\n      }\n      allMarkdownRemark(limit: 10) {\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date(formatString: \"DD MMMM, YYYY\")\n              tag\n              banner\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n    `\n  );\n  setAuthor(data.site.siteMetadata.author)\n  setAllArticles(data.allMarkdownRemark.edges)\n\n  return (\n    <Container>\n      <Header>\n        <WebsiteHeaderText>\n          <Link to=\"/\">\n            <h3> {data.site.siteMetadata.title} </h3>\n          </Link>\n        </WebsiteHeaderText>\n        <UlBox>\n          <ListLink to=\"/tags/\">标签</ListLink>\n          <ListLink to=\"/allArticles/\">系列</ListLink>\n          <ListLink to=\"/about/\">关于大可</ListLink>\n        </UlBox>\n        <BreadMenuContainer>\n          <i\n            class=\"fas fa-bars\"\n            onClick={() => {\n              setNavMenuStatus(true)\n            }}\n          ></i>\n        </BreadMenuContainer>\n        <Drawer\n          visibility={navMenuStatus}\n          onClose={() => {\n            setNavMenuStatus(false)\n          }}\n        >\n          <NavMenu />\n        </Drawer>\n      </Header>\n      <Body>{children}</Body>\n    </Container>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAllArticles: articles => {\n      dispatch(setArticles(articles))\n    },\n    setAuthor: authorInfo => {\n      dispatch(setAuthorInfo(authorInfo))\n    }\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...ownProps,\n    articles: state._allArticles.articles,\n  }\n}\n\nconst ConnectLayout = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout)\n\nexport default ConnectLayout;\n\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout/index.js\"\nimport Tags from \"../components/Tags/index.js\"\nimport { unit } from \"../utils/utils\"\n\nconst TagsTitle = styled.h3`\n  width: 100%;\n  padding: 1rem 0;\n  border-bottom: 1px solid #c8c8c8;\n  display: inline;\n`\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: column;\n`\n\nexport default ({ data }) => {\n  const allTag = unit(\n    data.allTags.edges.map(({ node }) => node.frontmatter.tag)\n  )\n\n  const onClickTag = tag => {\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <TagsTitle onClick={onClickTag}>All Tags</TagsTitle>\n        <Tags list={allTag} clickEvent={onClickTag} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allTags: allMarkdownRemark(filter: { frontmatter: { tag: { ne: null } } }) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            tag\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","// 数组去重\n// unit([1, 2, 3, 1])\nexport const unit = arr =>\n  arr.reduce((result, current) => {\n    if (!result.includes(current)) {\n      result.push(current)\n    }\n\n    return result\n  }, [])\n"],"sourceRoot":""}