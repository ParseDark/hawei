{"version":3,"sources":["webpack:///./src/components/layout/styles.js","webpack:///./src/components/layout/index.js","webpack:///./src/templates/blog-post.js"],"names":["Container","styled","div","rhythm","Header","header","WebsiteHeaderText","activeLink","borderBottom","LinkStyle","li","props","activeColor","Body","UlBox","ul","BreadMenuContainer","ListLink","activeStyle","to","children","Layout","useState","navMenuStatus","setNavMenuStatus","data","site","siteMetadata","title","class","onClick","Drawer","visibility","onClose","NavMenu","post","markdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html","query"],"mappings":"wMAIaA,G,UAAYC,IAAOC,IAAV,wEAAGD,CAAH,+DAGPE,YAAO,GACHA,YAAO,OAGbC,EAASH,IAAOI,OAAV,qEAAGJ,CAAH,sEAMNK,EAAoBL,IAAOC,IAAV,gFAAGD,CAAH,0DAMjBM,EAAa,CACtBC,aAAc,6BAGLC,EAAYR,IAAOS,GAAV,wEAAGT,CAAH,sLAEFE,YAAO,MAKQ,SAAAQ,GAAK,OAAIA,EAAMC,aAAe,qBAYpDC,EAAOZ,IAAOC,IAAV,mEAAGD,CAAH,8BAKJa,EAAQb,IAAOc,GAAV,oEAAGd,CAAH,0EASLe,EAAqBf,IAAOC,IAAV,iFAAGD,CAAH,kE,YC1CzBgB,EAAW,SAAAN,GAAK,OAClB,kBAACF,EAAD,KACI,kBAAC,IAAD,CAAMS,YAAaX,EAAYY,GAAIR,EAAMQ,IAAzC,IAAgDR,EAAMS,SAAtD,OA8COC,IAzCA,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAAe,EACaE,oBAAS,GAA5CC,EADsB,KACPC,EADO,KAEvBC,EAAI,OAWV,OACI,kBAACzB,EAAD,KACI,kBAACI,EAAD,KACI,kBAACE,EAAD,KACI,kBAAC,IAAD,CAAMa,GAAG,KACL,gCAAMM,EAAKC,KAAKC,aAAaC,MAA7B,OAGR,kBAACd,EAAD,KACI,kBAAC,EAAD,CAAUK,GAAG,UAAb,MACA,kBAAC,EAAD,CAAUA,GAAG,iBAAb,MACA,kBAAC,EAAD,CAAUA,GAAG,WAAb,SAEJ,kBAACH,EAAD,KACI,uBAAGa,MAAM,cAAcC,QAAS,WAAQN,GAAiB,OAE7D,kBAACO,EAAA,EAAD,CAAQC,WAAYT,EAAeU,QAAU,WAAQT,GAAiB,KAClE,kBAACU,EAAA,EAAD,QAGR,kBAACrB,EAAD,KACKO,M,kCC3DjB,8FAMMpB,GANN,UAMkBC,IAAOC,IAAV,0EAAGD,CAAH,gCAKA,sBAAe,IACtBkC,EADqB,EAAXV,KACEW,eAClB,OACE,kBAAC,IAAD,KACE,kBAACpC,EAAD,KACE,4BAAKmC,EAAKE,YAAYT,OACtB,yBAAKU,wBAAyB,CAAEC,OAAQJ,EAAKK,WAM9C,IAAMC,EAAK","file":"component---src-templates-blog-post-js-db76dc6f5d8d73f09fcc.js","sourcesContent":["import styled from 'styled-components';\nimport { rhythm } from \"../../utils/typography\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    max-width: 60rem;\n    padding: ${rhythm(1)};\n    padding-top: ${rhythm(1.5)};\n`;\n\nexport const Header = styled.header`\n    margin-bottom: 1.5rem;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const WebsiteHeaderText = styled.div`\n    text-shadow: none; \n    background-Image: none;\n    display: flex; \n`;\n\nexport const activeLink = {\n    borderBottom: '3px solid rgb(238,207,85)',\n};\n\nexport const LinkStyle = styled.li`\n    text-transform: uppercase;\n    margin-right: ${rhythm(1.5)};\n    position: relative;\n\n    ::after{\n        content: '';\n        border-bottom: 3px solid ${props => props.activeColor || 'rgb(238,207,85)'};\n        width: 0;\n        display: flex;\n        transition: all .2s;\n    };\n\n    :hover{\n        ::after{\n            width: 100%;\n        } \n    }\n`;\nexport const Body = styled.div`\n    width: 100%;\n    display: flex;\n`;\n\nexport const UlBox = styled.ul`\n    list-style: none;\n    display: flex ;\n\n    @media (max-width: 800px) {\n        display: none;\n    }\n`;\n\nexport const BreadMenuContainer = styled.div`\n    display: none;\n\n    @media (max-width: 800px) {\n        display: inline-block;\n    }\n`","import React, { useState } from 'react';\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport 'pace-progressbar';\nimport 'pace-progressbar/themes/blue/pace-theme-minimal.css';\nimport NavMenu from '../NavMenu/index.js';\nimport {\n    Container,\n    Header,\n    WebsiteHeaderText,\n    LinkStyle,\n    Body,\n    UlBox,\n    BreadMenuContainer,\n    activeLink,\n} from './styles.js';\nimport Drawer from '../Drawer/index.js';\n\n// 文章布局， 带导航栏\nconst ListLink = props => (\n    <LinkStyle>\n        <Link activeStyle={activeLink} to={props.to} > {props.children} </Link>\n    </LinkStyle >\n)\n\n\nconst Layout = ({ children }) => {\n    const [navMenuStatus, setNavMenuStatus] = useState(false);\n    const data = useStaticQuery(\n        graphql`\n          query {\n                site {\n                siteMetadata {\n                title\n            }\n            }\n          }\n        `\n    )\n    return (\n        <Container>\n            <Header>\n                <WebsiteHeaderText>\n                    <Link to=\"/\">\n                        <h3> {data.site.siteMetadata.title} </h3>\n                    </Link>\n                </WebsiteHeaderText>\n                <UlBox>\n                    <ListLink to=\"/tags/\">标签</ListLink>\n                    <ListLink to=\"/allArticles/\">系列</ListLink>\n                    <ListLink to=\"/about/\">关于大可</ListLink>\n                </UlBox>\n                <BreadMenuContainer>\n                    <i class=\"fas fa-bars\" onClick={() => { setNavMenuStatus(true); }}></i>\n                </BreadMenuContainer>\n                <Drawer visibility={navMenuStatus} onClose={(() => { setNavMenuStatus(false); })}>\n                    <NavMenu />\n                </Drawer>\n            </Header>\n            <Body>\n                {children}\n            </Body>\n        </Container>\n    )\n}\n\n\nexport default Layout;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from 'styled-components';\nimport Layout from \"../components/layout/index.js\";\nimport \"./style.css\";\n\nconst Container = styled.div`\n  width: 100%;\n  overflow: auto;\n`;\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <Container>\n        <h1>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}