{"data":{"site":{"siteMetadata":{"title":"大可的技术屋","author":{"name":"Hawei/大可","github":"https://github.com/ParseDark","juejin":"https://juejin.im/user/5a4c68c2f265da43052f036f","twitter":"https://twitter.com/DarkParse","email":"13597213421@163.com"}}},"allMarkdownRemark":{"totalCount":30,"edges":[{"node":{"id":"4d9c4b6e-4b49-5d94-953a-20bbe2772fd9","frontmatter":{"title":"基于node-fetch二次封装","date":"10 August, 2017","tag":"ES6","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/fetch/"},"excerpt":"背景：项目中我们使用 koa2 作为静态资源+转发代理服务器.前端 react. 冲突：后端对于某些业务逻辑执着于状态返回 500/400， 而不是使用统一的错误码， 我们又必须拿到错误信息.\n我们在 koa2 使用的 fetch 库为：request-promise…"}},{"node":{"id":"6509edb6-fba3-551e-8eb1-72b127498bfe","frontmatter":{"title":"styled-components基础","date":"03 January, 2020","tag":"css-in-js","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/styled-component/base/"},"excerpt":"styled-components 是什么？  Styled-Components是解决css-in-js较为成熟的npm包. 为什么， 解决了什么问题？  主要解决的问题： css-in-js…"}},{"node":{"id":"92e98a29-2bed-5c51-87a9-a43566a6812e","frontmatter":{"title":"11Sweet Pandas Eating Sweets","date":"10 August, 2017","tag":"css","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/md2/"},"excerpt":"Pandas are really sweet. Here's a video of a panda eating sweets. avatar"}},{"node":{"id":"587116a0-f30f-5264-a245-d39b1a815184","frontmatter":{"title":"Sweet Pandas Eating Sweets","date":"10 August, 2017","tag":"ES5","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/md2 copy/"},"excerpt":"Pandas are really sweet. Here's a video of a panda eating sweets."}},{"node":{"id":"fbd07cdf-fb1a-506b-9151-2e506ee16c9c","frontmatter":{"title":"1. TS项目配置","date":"03 January, 2020","tag":"typescript","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/typescript/1. TS项目配置/"},"excerpt":"全局安装ts 初始化ts配置 配置ts文件 npm script command"}},{"node":{"id":"94660469-c949-5d3c-be94-e09a987787f4","frontmatter":{"title":"10.类型兼容","date":"03 January, 2020","tag":"typescript","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/typescript/10.类型兼容/"},"excerpt":"类型兼容 结构类型 规则： 如果 x 要兼容 y，那么 y 至少具有与 x 相同的属性。 最小化原则吧， 东西少的兼容东西多的，东西多的不能兼容东西少的.最小化原则. 我们做一个简单的实验，我们构建一个类 Person,然后声明一个接口 Dog，Dog 的属性 Person…"}},{"node":{"id":"53b461cf-890c-5496-930d-7a22465b8bd8","frontmatter":{"title":"11. 高级类型之交叉类型、联合类型、类型别名","date":"03 January, 2020","tag":"typescript","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/typescript/11. 高级类型之交叉类型、联合类型、类型别名/"},"excerpt":"高级类型之交叉类型、联合类型、类型别名 基础组块之上的知识了. 交叉类型 对于交叉类型，把现有的类型进行叠加形成一种新的类型.包含叠加类型的特性. 在js中我们有mixin操作， 就是把两个对象mixin…"}},{"node":{"id":"ae9a4cc8-eb03-5413-949e-c007664230fb","frontmatter":{"title":"12.可辨识联合类型","date":"03 January, 2020","tag":"typescript","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/typescript/12.可辨识联合类型/"},"excerpt":"可辨识联合类型 两个关键概念， 字面量类型， 类型字面量. 字面量类型 字面量（Literal Type）主要分为 真值字面量类型（boolean literal types）,数字字面量类型（numeric literal types）,枚举字面量类型（enum literal…"}},{"node":{"id":"d1db23c8-7f0e-5a32-9548-741c3a446182","frontmatter":{"title":"13.装饰器","date":"03 January, 2020","tag":"typescript","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/typescript/13.装饰器/"},"excerpt":"装饰器 解决了什么问题？ 装饰器(decorator)最早在 Python 中被引入,它的主要作用是给一个已有的方法或类扩展一些新的行为，而不是去直接修改它本身. 两个概念：  目前装饰器本质上是一个函数,@expression 的形式其实是一个语法糖, expression…"}},{"node":{"id":"693324a3-bad4-580b-af7c-9155ce3ace60","frontmatter":{"title":"15. Reflect Metadata","date":"03 January, 2020","tag":"typescript","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"},"fields":{"slug":"/md/typescript/15. Reflect Metadata/"},"excerpt":"Reflect Metadata 概括 之后我们就可以用装饰器来获取、添加元数据了. 结论就是 Relfect Metadata，可以通过装饰器来给类添加一些自定义的信息 然后通过反射将这些信息提取出来 也可以通过反射来添加这些信息 常用api 参数解释 Metadata Key…"}}]}}}