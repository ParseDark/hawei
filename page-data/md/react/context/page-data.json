{"componentChunkName":"component---src-templates-blog-post-js","path":"/md/react/context/","result":{"data":{"markdownRemark":{"html":"<h1>context</h1>\n<p>context是针对中小型应用，没有复杂的状态管理的需求， 提供的内置状态管理工具.</p>\n<blockquote>\n<p>官方定义： Context 提供了一个无需为每层组件手动添加 props，就能在组件树间进行数据传递的方法。</p>\n</blockquote>\n<p>如果没有context我们的数据流会变成， 在每一级的组件中， 去使用props传递我们需要的值.</p>\n<p>使用基本分为：创建context=>注入=>在组件内引入=>使用</p>\n<h2>1. 创建context</h2>\n<p>新建context.js</p>\n<pre><code class=\"language-js\">import { createContext } from \"react\";\n\nconst ThemeContext = createContext([\"green\", () => {}]);\n\nexport default ThemeContext;\n</code></pre>\n<h2>2. 注入context</h2>\n<pre><code class=\"language-js\">// 在最外层的组件注入\n// 这个才是他妈的重点， 注入的时候， 必须要把整个useStateHook注入进去， 不然set函数就没有\nconst themeContenxtContainer = useState('default')\n\nreturn (\n    &#x3C;ThemeContext.Provider value={themeContextContainer}>\n    &#x3C;/ThemeContext.Provider>\n)\n</code></pre>\n<h2>3. 使用context</h2>\n<pre><code class=\"language-js\">() => {\n    // 只有上面把reactHook注入了， 在这里才能获取到theme和setTheme\n    const [theme, setTheme] = useContext(ThemeContext)\n    return (\n        &#x3C;div>\n            {theme}\n            &#x3C;button onClick={() => setTheme('red')}>&#x3C;/button>\n        &#x3C;/div>\n    ) \n}\n</code></pre>","frontmatter":{"title":"hook基础-context","date":"03 January, 2020","tag":"react-hook","banner":"https://desk-fd.zol-img.com.cn/t_s960x600c5/g2/M00/04/0B/ChMlWl0-oHmIDZvqAAdz3RsOKEYAAMMNwPQhEkAB3P1417.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/md/react/context/"}}}