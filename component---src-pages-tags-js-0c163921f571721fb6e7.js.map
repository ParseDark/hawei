{"version":3,"sources":["webpack:///./src/components/layout/styles.js","webpack:///./src/components/layout/index.js","webpack:///./src/pages/tags.js"],"names":["Container","styled","div","rhythm","Header","header","WebsiteHeaderText","activeLink","borderBottom","LinkStyle","li","props","activeColor","Body","UlBox","ul","BreadMenuContainer","ListLink","activeStyle","to","children","Layout","useState","navMenuStatus","setNavMenuStatus","data","site","siteMetadata","title","class","onClick","Drawer","visibility","onClose","NavMenu","TagsTitle","h3","allTag","unit","allTags","edges","map","node","frontmatter","tag","onClickTag","list","clickEvent","query"],"mappings":"wMAIaA,G,UAAYC,IAAOC,IAAV,wEAAGD,CAAH,+DAGTE,YAAO,GACHA,YAAO,OAGXC,EAASH,IAAOI,OAAV,qEAAGJ,CAAH,sEAMNK,EAAoBL,IAAOC,IAAV,gFAAGD,CAAH,0DAMjBM,EAAa,CACxBC,aAAc,6BAGHC,EAAYR,IAAOS,GAAV,wEAAGT,CAAH,sLAEJE,YAAO,MAKM,SAAAQ,GAAK,OAAIA,EAAMC,aAAe,qBAYhDC,EAAOZ,IAAOC,IAAV,mEAAGD,CAAH,8BAKJa,EAAQb,IAAOc,GAAV,oEAAGd,CAAH,0EASLe,EAAqBf,IAAOC,IAAV,iFAAGD,CAAH,kE,YC1CzBgB,EAAW,SAAAN,GAAK,OACpB,kBAACF,EAAD,KACE,kBAAC,IAAD,CAAMS,YAAaX,EAAYY,GAAIR,EAAMQ,IACtC,IACAR,EAAMS,SAAU,OAqDRC,IAhDA,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAAe,EACWE,oBAAS,GAA5CC,EADwB,KACTC,EADS,KAEzBC,EAAI,OAWV,OACE,kBAACzB,EAAD,KACE,kBAACI,EAAD,KACE,kBAACE,EAAD,KACE,kBAAC,IAAD,CAAMa,GAAG,KACP,gCAAMM,EAAKC,KAAKC,aAAaC,MAA7B,OAGJ,kBAACd,EAAD,KACE,kBAAC,EAAD,CAAUK,GAAG,UAAb,MACA,kBAAC,EAAD,CAAUA,GAAG,iBAAb,MACA,kBAAC,EAAD,CAAUA,GAAG,WAAb,SAEF,kBAACH,EAAD,KACE,uBACEa,MAAM,cACNC,QAAS,WACPN,GAAiB,OAIvB,kBAACO,EAAA,EAAD,CACEC,WAAYT,EACZU,QAAS,WACPT,GAAiB,KAGnB,kBAACU,EAAA,EAAD,QAGJ,kBAACrB,EAAD,KAAOO,M,kCCtEb,kIAOMe,EAAYlC,IAAOmC,GAAV,sEAAGnC,CAAH,+EAOTD,EAAYC,IAAOC,IAAV,sEAAGD,CAAH,+CAMA,sBAAe,IAAZwB,EAAW,EAAXA,KACVY,EAASC,YACbb,EAAKc,QAAQC,MAAMC,KAAI,qBAAGC,KAAgBC,YAAYC,QAGlDC,EAAa,SAAAD,KAInB,OACE,kBAAC,IAAD,KACE,kBAAC5C,EAAD,KACE,kBAACmC,EAAD,CAAWL,QAASe,GAApB,YACA,kBAAC,IAAD,CAAMC,KAAMT,EAAQU,WAAYF,OAMjC,IAAMG,EAAK","file":"component---src-pages-tags-js-0c163921f571721fb6e7.js","sourcesContent":["import styled from \"styled-components\"\nimport { rhythm } from \"../../utils/typography\"\nimport \"@fortawesome/fontawesome-free/css/all.css\"\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 60rem;\n  padding: ${rhythm(1)};\n  padding-top: ${rhythm(1.5)};\n`\n\nexport const Header = styled.header`\n  margin-bottom: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport const WebsiteHeaderText = styled.div`\n  text-shadow: none;\n  background-image: none;\n  display: flex;\n`\n\nexport const activeLink = {\n  borderBottom: \"3px solid rgb(238,207,85)\",\n}\n\nexport const LinkStyle = styled.li`\n  text-transform: uppercase;\n  margin-right: ${rhythm(1.5)};\n  position: relative;\n\n  ::after {\n    content: \"\";\n    border-bottom: 3px solid ${props => props.activeColor || \"rgb(238,207,85)\"};\n    width: 0;\n    display: flex;\n    transition: all 0.2s;\n  }\n\n  :hover {\n    ::after {\n      width: 100%;\n    }\n  }\n`\nexport const Body = styled.div`\n  width: 100%;\n  display: flex;\n`\n\nexport const UlBox = styled.ul`\n  list-style: none;\n  display: flex;\n\n  @media (max-width: 800px) {\n    display: none;\n  }\n`\n\nexport const BreadMenuContainer = styled.div`\n  display: none;\n\n  @media (max-width: 800px) {\n    display: inline-block;\n  }\n`\n","import React, { useState } from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport \"pace-progressbar\"\nimport \"pace-progressbar/themes/blue/pace-theme-minimal.css\"\nimport NavMenu from \"../NavMenu/index.js\"\nimport {\n  Container,\n  Header,\n  WebsiteHeaderText,\n  LinkStyle,\n  Body,\n  UlBox,\n  BreadMenuContainer,\n  activeLink,\n} from \"./styles.js\"\nimport Drawer from \"../Drawer/index.js\"\n\n// 文章布局， 带导航栏\nconst ListLink = props => (\n  <LinkStyle>\n    <Link activeStyle={activeLink} to={props.to}>\n      {\" \"}\n      {props.children}{\" \"}\n    </Link>\n  </LinkStyle>\n)\n\nconst Layout = ({ children }) => {\n  const [navMenuStatus, setNavMenuStatus] = useState(false)\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return (\n    <Container>\n      <Header>\n        <WebsiteHeaderText>\n          <Link to=\"/\">\n            <h3> {data.site.siteMetadata.title} </h3>\n          </Link>\n        </WebsiteHeaderText>\n        <UlBox>\n          <ListLink to=\"/tags/\">标签</ListLink>\n          <ListLink to=\"/allArticles/\">系列</ListLink>\n          <ListLink to=\"/about/\">关于大可</ListLink>\n        </UlBox>\n        <BreadMenuContainer>\n          <i\n            class=\"fas fa-bars\"\n            onClick={() => {\n              setNavMenuStatus(true)\n            }}\n          ></i>\n        </BreadMenuContainer>\n        <Drawer\n          visibility={navMenuStatus}\n          onClose={() => {\n            setNavMenuStatus(false)\n          }}\n        >\n          <NavMenu />\n        </Drawer>\n      </Header>\n      <Body>{children}</Body>\n    </Container>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layout/index.js\"\nimport Tags from \"../components/Tags/index.js\"\nimport { unit } from \"../utils/utils\"\n\nconst TagsTitle = styled.h3`\n  width: 100%;\n  padding: 1rem 0;\n  border-bottom: 1px solid #c8c8c8;\n  display: inline;\n`\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: column;\n`\n\nexport default ({ data }) => {\n  const allTag = unit(\n    data.allTags.edges.map(({ node }) => node.frontmatter.tag)\n  )\n\n  const onClickTag = tag => {\n    debugger\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <TagsTitle onClick={onClickTag}>All Tags</TagsTitle>\n        <Tags list={allTag} clickEvent={onClickTag} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allTags: allMarkdownRemark(filter: { frontmatter: { tag: { ne: null } } }) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            tag\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}