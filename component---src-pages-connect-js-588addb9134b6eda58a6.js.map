{"version":3,"sources":["webpack:///./src/utils/utils.js","webpack:///./src/pages/connect.js","webpack:///./src/components/RecordArticlesList/index.js","webpack:///./src/components/Tags/index.js","webpack:///./src/components/ArticleCard/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/components/Layout/styles.js","webpack:///./src/components/Layout/index.js"],"names":["unit","arr","reduce","result","current","includes","push","Atver","styled","div","NavContainer","AuthorText","IconContainer","Circle","props","iconColor","ArticleContainer","data","allTag","allTags","edges","map","node","frontmatter","tag","site","siteMetadata","author","twitter","github","juejin","email","style","background","width","display","flexFlow","src","href","target","class","header","key","list","allMarkdownRemark","query","Article","span","MoreText","ArticlesList","id","to","fields","slug","title","Tag","TagsContainer","Tags","item","Container","ImageContainer","banner","TextContainer","Title","Description","ArticleFooter","Line","DateText","BanerTitle","BannerText","ArticleCard","excerpt","date","Header","h5","rhythm","CardBody","Card","children","WebsiteHeaderText","LinkStyle","li","Body","ListLink","Layout","listStyle"],"mappings":"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","file":"component---src-pages-connect-js-588addb9134b6eda58a6.js","sourcesContent":["// 数组去重\n// unit([1, 2, 3, 1])\nexport const unit = (arr) => arr.reduce((result, current) => {\n    if (!result.includes(current)) {\n        result.push(current);\n    }\n\n    return result;\n}, []);","import React from 'react';\nimport Layout from '../components/Layout/index.js';\nimport { graphql, Link } from \"gatsby\"\nimport styled from 'styled-components';\n\nimport Card from '../components/Card/index.js';\nimport ArticlesList from '../components/RecordArticlesList/index.js';\nimport Tags from '../components/Tags/index.js';\nimport { unit } from '../utils/utils';\nimport ArticleCard from '../components/ArticleCard/index.js';\n\nconst Atver = styled.div`\n    width: 5rem;\n    height: 5rem;\n    border-radius: 50%;\n    background: rgb(238, 207, 85);\n    margin: 1rem 0 2rem 0;\n    position: relative;\n\n    ::before {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        content: 'H';\n        font-size: 4rem;\n        color: #fff;\n    }\n`;\n\nconst NavContainer = styled.div`\n    background: rgb(255, 255, 255);\n    width: 15rem;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: .3rem;\n    padding: 2rem 1rem;\n    height: 40rem;\n\n    position: sticky;\n    top: 1rem;    \n`;\n\nconst AuthorText = styled.div`\n    margin-bottom: 1rem;\n`;\n\nconst IconContainer = styled.div`\n    display: flex;\n`;\n\nconst Circle = styled.div`\n    width: 2rem;\n    height: 2rem;\n    border-radius: 50%;\n    background: rgb(238, 207, 85);\n    margin: .5rem;\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #fff;\n    transition: all .2s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    \n\n    i {\n        transition: all .2s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n        color: #fff;\n    }\n\n    :hover {\n        background: #fff;\n    }\n\n    :hover i {\n        color: ${(props) => props.iconColor};\n        transform: scale(2);\n    }\n`;\n\nconst ArticleContainer = styled.div`\n    flex: 1;\n    margin-left: 1rem;\n`;\n\n\n\nexport default ({ data }) => {\n\n    const allTag = unit(data.allTags.edges.map(({ node }) => (node.frontmatter.tag)));\n\n    const {\n        twitter,\n        github,\n        juejin,\n        email,\n    } = data.site.siteMetadata.author;\n    return (\n        <Layout>\n            <NavContainer style={{ background: '#fff', width: '15rem', display: 'flex', flexFlow: 'co' }}>\n                <Atver src=\"avter.png\" />\n                <AuthorText>\n                    Hawei/大可\n            </AuthorText>\n                <IconContainer>\n                    <Circle iconColor=\"rgb(96, 153, 237)\">\n                        <a href={twitter} target=\"__blank\">\n                            <i class=\"fab fa-twitter\"></i>\n                        </a>\n                    </Circle>\n                    <Circle iconColor=\"#24292e\">\n                        <a href={github} target=\"__blank\">\n                            <i class=\"fab fa-github-alt\"></i>\n                        </a>\n                    </Circle>\n                    <Circle iconColor=\"rgb(176, 10, 24)\">\n                        <a href={`mailto:${email}`} target=\"_blank\">\n                            <i class=\"fa fa-envelope\"></i>\n                        </a>\n                    </Circle>\n                    <Circle iconColor=\"rgb(61, 108, 251)\">\n                        <a href={juejin} target=\"__blank\">\n                            <i class=\"fab fa-buffer\"></i>\n                        </a>\n                    </Circle>\n                </IconContainer>\n                <Card header=\"标签\" key=\"标签\">\n                    <Tags list={allTag} />\n                </Card>\n                <Card header=\"最近的帖子\" key=\"最近的帖子\">\n                    <ArticlesList list={data.allMarkdownRemark.edges} />\n                </Card>\n                {/* <Card header=\"系列(数据未完成)\" key=\"系列\">\n                    <ArticlesList list={data.allMarkdownRemark.edges} />\n                </Card> */}\n            </NavContainer>\n            <ArticleContainer>\n                <ArticleCard list={data.allMarkdownRemark.edges} />\n            </ArticleContainer>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query {\n        site {\n            siteMetadata {\n                title\n                author {\n                    name\n                    github\n                    juejin\n                    twitter\n                    email\n                }\n            }\n\n         \n        }\n        allMarkdownRemark {\n            totalCount\n            edges {\n              node {\n                id\n                frontmatter {\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                  tag\n                  banner\n                }\n                fields {\n                  slug\n                }\n                excerpt\n              }\n            }\n        }\n        allTags:   allMarkdownRemark(filter: {frontmatter: {tag: {ne: null}}}) {\n            totalCount\n            edges {\n              node {\n                id\n                excerpt\n                frontmatter {\n                  tag\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                }\n                fields {\n                    slug\n                }\n              }\n            }\n          }\n    }\n`","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst Article = styled.span`\n     :hover {\n         text-decoration: underline\n     }\n`;\n\nconst MoreText = styled.div`\n    text-align: right;\n`\n\nconst ArticlesList = ({ list }) => {\n    return (\n        <>\n            {\n                list.map(({ node }) => (\n                    <>\n                        <div key={node.id}>\n                            <span>> </span>\n                            <Link\n                                to={node.fields.slug}\n                            >\n                                <Article>\n                                    {node.frontmatter.title}{\" \"}\n                                </Article>\n                            </Link>\n                        </div>\n                    </>\n                ))\n            }\n            <MoreText>\n                <Link\n                    to=\"/allArticles\"\n                >\n                    <Article>more >></Article>\n                </Link>\n            </MoreText>\n\n        </>\n    )\n}\n\nexport default ArticlesList;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Tag = styled.div`\n    background: rgba(22, 22, 22, .2);\n    padding: .2rem .3rem;\n    display: inline;\n    margin: 0 .3rem .4rem 0;\n`;\n\nconst TagsContainer = styled.div`\n    display: flex;\n    flex-flow: row wrap;\n`;\n\n\nconst Tags = ({ list }) => {\n    return (\n        <TagsContainer>\n            {\n                list.map(item => (\n                    <Tag>{item}</Tag>\n                ))\n            }\n        </TagsContainer>\n    );\n}\n\nexport default Tags;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Container = styled.div`\n    background: #fff;\n    border-radius: .5rem;\n    margin-bottom: 1rem;\n`;\n\nconst ImageContainer = styled.div`\n    background: url(${(props) => props.banner}) no-repeat center center;\n    height: 18rem;\n    border-radius: .5rem .5rem 0 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst TextContainer = styled.div`\n    padding: .5rem 2rem;\n    display: flex;\n    flex-flow: column nowrap;\n`;\n\nconst Title = styled.div`\n    font-size: 2rem;\n    line-height: 2.5rem;\n    position: relative;\n    padding: 1rem 0;\n    cursor: pointer;\n\n    ::after{\n        content: '';\n        background: #decb4c;\n        content: \"\";\n        display: inline-block;\n        width: 2rem;\n        height: .1rem;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        margin-bottom: 1rem;\n    }\n\n    :hover {\n         text-decoration: underline\n     }\n`;\n\nconst Description = styled.div`\n    font-size: .8rem;\n    overflow: hidden;\n    flex: 1;\n`;\nconst ArticleFooter = styled.div`\n    padding: 0 2rem .5rem 2rem;\n`;\n\nconst Line = styled.div`\n    border-top: 1px solid #ececec;\n`;\n\nconst DateText = styled.div`\n    color: #989b9d;\n    padding: 1rem 0;\n    font-size: .8rem;\n`;\n\nconst BanerTitle = styled.div`\n    flex-flow: column nowrap;\n    font-family: 'Oswald', sans-serif;\n    color: #000;\n    font-size: 1.5rem;\n    min-height: 8rem;\n    min-width: 60%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 20px double;\n    border-color: rgba(255, 255, 255, .8);\n`;\n\nconst BannerText = styled.div`\n    padding: 2rem;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(255, 255, 255, .8);\n    width: 100%;\n`;\n\nconst ArticleCard = ({ list }) => {\n    return (\n        <>\n            {\n                list.map(({ node }) => (\n                    <Container>\n                        <ImageContainer banner={node.frontmatter.banner}>\n                            <BanerTitle>\n                                <BannerText>\n                                    {node.frontmatter.title}\n                                </BannerText>\n                            </BanerTitle>\n                        </ImageContainer>\n                        <TextContainer>\n                            <Link\n                                to={node.fields.slug}\n                            >\n                                <Title>\n                                    {node.frontmatter.title}\n                                </Title>\n                            </Link>\n                            <Description>\n                                {node.excerpt}\n                            </Description>\n                        </TextContainer>\n                        <ArticleFooter>\n                            <Line />\n                            <DateText>\n                                {node.frontmatter.date}\n                            </DateText>\n                        </ArticleFooter>\n                    </Container>\n                ))\n            }\n        </>\n    );\n}\n\nexport default ArticleCard;","import React from 'react';\nimport styled from 'styled-components';\nimport { rhythm } from \"../../utils/typography\";\n\n\nconst Header = styled.h5`\n    height: ${ rhythm(1)};\n    position: relative;\n    margin: 0 0 .8rem 0;\n    padding: 0 0 .5rem .6rem;\n    border-bottom: solid .05rem #ececec;\n    font-size: 18px;\n    font-size: 1.125rem;\n    text-transform: uppercase;\n\n    ::before {\n        background: #decb4c;\n        content: '';\n        width: 1px;\n\n        content: \"\";\n        display: inline-block;\n        width: .16rem;\n        height: 1.1rem;\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n`;\n\nconst CardBody = styled.div`\n\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    margin: 1rem 0;\n`;\n\nconst Card = ({ header, children }) => {\n    return (\n        <Container>\n            <Header>\n                {header}\n            </Header>\n            <CardBody>\n                {children}\n            </CardBody>\n        </Container>\n    );\n}\n\n\nexport default Card;","import styled from 'styled-components';\nimport { rhythm } from \"../../utils/typography\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    max-width: 70rem;\n    padding: ${rhythm(1)};\n    padding-top: ${rhythm(1.5)};\n`\n\nexport const Header = styled.header`\n    margin-bottom: 1.5rem;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const WebsiteHeaderText = styled.div`\n    text-shadow: none; \n    background-Image: none;\n    display: flex; \n`;\n\nexport const LinkStyle = styled.li`\n    text-transform: uppercase;\n    margin-right: ${rhythm(1.5)};\n    position: relative;\n\n    ::after{\n        content: '';\n        border-bottom: 3px solid #333;\n        width: 0;\n        display: flex;\n        transition: all .2s;\n        position: absolute;\n        transform: translate(-50%, 0);\n        left: 50%;\n    };\n\n    :hover{\n        ::after{\n            width: 100%;\n        } \n    }\n`;\nexport const Body = styled.div`\n    width: 100%;\n    display: flex;\n`;","import React from 'react';\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport {\n    Container,\n    Header,\n    WebsiteHeaderText,\n    LinkStyle,\n    Body,\n} from './styles.js';\n\n\n// 文章布局， 带导航栏\nconst ListLink = props => (\n    <LinkStyle >\n        <Link to={props.to} > {props.children} </Link>\n    </LinkStyle >\n)\n\nconst Layout = ({ children }) => {\n    const data = useStaticQuery(\n        graphql`\n          query {\n                site {\n                siteMetadata {\n                title\n            }\n            }\n          }\n        `\n    )\n    return (\n        <Container>\n            <Header>\n                <WebsiteHeaderText>\n                    <Link to=\"/\">\n                        <h3> {data.site.siteMetadata.title} </h3>\n                    </Link>\n                </WebsiteHeaderText>\n                <ul style={\n                    { listStyle: `none`, display: 'flex' }\n                } >\n                    <ListLink to=\"/allArticles/\">博客</ListLink>\n                    <ListLink to=\"/about/\">关于</ListLink>\n                    <ListLink to=\"/connect/\">联系我</ListLink>\n                </ul>\n            </Header >\n            <Body>\n                {children}\n            </Body>\n        </Container>\n    )\n}\n\n\nexport default Layout;"],"sourceRoot":""}