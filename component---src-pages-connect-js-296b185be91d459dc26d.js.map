{"version":3,"sources":["webpack:///./src/components/Card/index.js","webpack:///./src/components/RecordArticlesList/index.js","webpack:///./src/components/Tags/index.js","webpack:///./src/pages/connect.js","webpack:///./src/utils/utils.js"],"names":["Header","styled","h5","rhythm","CardBody","div","Container","Card","header","children","Article","span","MoreText","ArticlesList","list","map","node","key","id","to","fields","slug","frontmatter","title","Tag","TagsContainer","Tags","item","Atver","AuthorText","IconContainer","Icon","query","data","allTag","allTags","edges","tag","reduce","result","current","includes","push","style","background","width","display","flexFlow","src","allMarkdownRemark"],"mappings":"26BAKA,IAAMA,EAASC,IAAOC,GAAV,IACGC,YAAO,IAwBhBC,EAAWH,IAAOI,IAAV,KAIRC,EAAYL,IAAOI,IAAV,KAmBAE,EAdF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACpB,OACI,kBAACH,EAAD,KACI,kBAACN,EAAD,KACKQ,GAEL,kBAACJ,EAAD,KACKK,K,iQC1CjB,IAAMC,EAAUT,IAAOU,KAAV,KAMPC,EAAWX,IAAOI,IAAV,KAmCCQ,EA/BM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OACI,oCAEQA,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACL,oCACI,yBAAKC,IAAKD,EAAKE,IACX,oCACA,kBAAC,IAAD,CACIC,GAAIH,EAAKI,OAAOC,MAEhB,kBAACX,EAAD,KACKM,EAAKM,YAAYC,MAAO,WAOjD,kBAACX,EAAD,KACI,kBAAC,IAAD,CACIO,GAAG,gBAEH,kBAACT,EAAD,oB,iVClCpB,IAAMc,EAAMvB,IAAOI,IAAV,KAOHoB,EAAgBxB,IAAOI,IAAV,KAkBJqB,EAZF,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KACZ,OACI,kBAACW,EAAD,KAEQX,EAAKC,KAAI,SAAAY,GAAI,OACT,kBAACH,EAAD,KAAMG,Q,0nCCX1B,IAAMC,EAAQ3B,IAAOI,IAAV,KAmBLC,EAAYL,IAAOI,IAAV,KAYTwB,EAAa5B,IAAOI,IAAV,KAIVyB,EAAgB7B,IAAOI,IAAV,KAIb0B,EAAO9B,IAAOI,IAAV,KAyCG2B,GA/BE,sBAAe,IAAZC,EAAW,EAAXA,KAERC,EAAcD,EAAKE,QAAQC,MAAMrB,KAAI,qBAAGC,KAAiBM,YAAYe,OC3D9CC,QAAO,SAACC,EAAQC,GAK7C,OAJKD,EAAOE,SAASD,IACjBD,EAAOG,KAAKF,GAGTD,IACR,IDuDC,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAWI,MAAO,CAAEC,WAAY,OAAQC,MAAO,QAASC,QAAS,OAAQC,SAAU,OAC/E,kBAACnB,EAAD,CAAOoB,IAAI,cACX,kBAACnB,EAAD,iBAGA,kBAACC,EAAD,KACI,kBAACC,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,OAEJ,kBAAC,EAAD,CAAMvB,OAAO,KAAKS,IAAI,MAClB,kBAAC,EAAD,CAAMH,KAAMoB,KAEhB,kBAAC,EAAD,CAAM1B,OAAO,QAAQS,IAAI,SACrB,kBAAC,EAAD,CAAcH,KAAMmB,EAAKgB,kBAAkBb,SAE/C,kBAAC,EAAD,CAAM5B,OAAO,YAAYS,IAAI,MACzB,kBAAC,EAAD,CAAcH,KAAMmB,EAAKgB,kBAAkBb,YAO7C","file":"component---src-pages-connect-js-296b185be91d459dc26d.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { rhythm } from \"../../utils/typography\";\n\n\nconst Header = styled.h5`\n    height: ${ rhythm(1)};\n    position: relative;\n    margin: 0 0 .8rem 0;\n    padding: 0 0 .5rem .6rem;\n    border-bottom: solid .05rem #ececec;\n    font-size: 18px;\n    font-size: 1.125rem;\n    text-transform: uppercase;\n\n    ::before {\n        background: #decb4c;\n        content: '';\n        width: 1px;\n\n        content: \"\";\n        display: inline-block;\n        width: .16rem;\n        height: 1.1rem;\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n`;\n\nconst CardBody = styled.div`\n\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    margin: 1rem 0;\n`;\n\nconst Card = ({ header, children }) => {\n    return (\n        <Container>\n            <Header>\n                {header}\n            </Header>\n            <CardBody>\n                {children}\n            </CardBody>\n        </Container>\n    );\n}\n\n\nexport default Card;","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst Article = styled.span`\n     :hover {\n         text-decoration: underline\n     }\n`;\n\nconst MoreText = styled.div`\n    text-align: right;\n`\n\nconst ArticlesList = ({ list }) => {\n    return (\n        <>\n            {\n                list.map(({ node }) => (\n                    <>\n                        <div key={node.id}>\n                            <span>> </span>\n                            <Link\n                                to={node.fields.slug}\n                            >\n                                <Article>\n                                    {node.frontmatter.title}{\" \"}\n                                </Article>\n                            </Link>\n                        </div>\n                    </>\n                ))\n            }\n            <MoreText>\n                <Link\n                    to=\"/allArticles\"\n                >\n                    <Article>more >></Article>\n                </Link>\n            </MoreText>\n\n        </>\n    )\n}\n\nexport default ArticlesList;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Tag = styled.div`\n    background: rgba(22, 22, 22, .2);\n    padding: .2rem .3rem;\n    display: inline;\n    margin: 0 .3rem .4rem 0;\n`;\n\nconst TagsContainer = styled.div`\n    display: flex;\n    flex-flow: row wrap;\n`;\n\n\nconst Tags = ({ list }) => {\n    return (\n        <TagsContainer>\n            {\n                list.map(item => (\n                    <Tag>{item}</Tag>\n                ))\n            }\n        </TagsContainer>\n    );\n}\n\nexport default Tags;","import React from 'react';\nimport Layout from '../components/layout/index.js';\nimport { graphql, Link } from \"gatsby\"\nimport styled from 'styled-components';\n\nimport Card from '../components/Card/index.js';\nimport ArticlesList from '../components/RecordArticlesList/index.js';\nimport Tags from '../components/Tags/index.js';\nimport { unit } from '../utils/utils';\n\nconst Atver = styled.div`\n    width: 5rem;\n    height: 5rem;\n    border-radius: 50%;\n    background: rgb(238, 207, 85);\n    margin: 1rem 0 2rem 0;\n    position: relative;\n\n    ::before {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        content: 'H';\n        font-size: 4rem;\n        color: #fff;\n    }\n`;\n\nconst Container = styled.div`\n    background: rgb(255, 255, 255);\n    width: 15rem;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: .3rem;\n    padding: 2rem 1rem;\n\n`;\n\nconst AuthorText = styled.div`\n    margin-bottom: 1rem;\n`;\n\nconst IconContainer = styled.div`\n    display: flex;\n`;\n\nconst Icon = styled.div`\n    width: 2rem;\n    height: 2rem;\n    border-radius: 50%;\n    background: rgb(238, 207, 85);\n    margin: .5rem;\n`;\n\n\n\nexport default ({ data }) => {\n\n    const allTag = unit(data.allTags.edges.map(({ node }) => (node.frontmatter.tag)));\n\n    return (\n        <Layout>\n            <Container style={{ background: '#fff', width: '15rem', display: 'flex', flexFlow: 'co' }}>\n                <Atver src=\"avter.png\" />\n                <AuthorText>\n                    Hawei/大可\n            </AuthorText>\n                <IconContainer>\n                    <Icon />\n                    <Icon />\n                    <Icon />\n                    <Icon />\n                </IconContainer>\n                <Card header=\"标签\" key=\"标签\">\n                    <Tags list={allTag} />\n                </Card>\n                <Card header=\"最近的帖子\" key=\"最近的帖子\">\n                    <ArticlesList list={data.allMarkdownRemark.edges} />\n                </Card>\n                <Card header=\"系列(数据未完成)\" key=\"系列\">\n                    <ArticlesList list={data.allMarkdownRemark.edges} />\n                </Card>\n            </Container>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query {\n        site {\n            siteMetadata {\n                title\n                author {\n                    name\n                    github\n                    juejin\n                }\n            }\n\n         \n        }\n        allMarkdownRemark {\n            totalCount\n            edges {\n              node {\n                id\n                frontmatter {\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                  tag\n                }\n                fields {\n                  slug\n                }\n                excerpt\n              }\n            }\n        }\n        allTags:   allMarkdownRemark(filter: {frontmatter: {tag: {ne: null}}}) {\n            totalCount\n            edges {\n              node {\n                id\n                excerpt\n                frontmatter {\n                  tag\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                }\n                fields {\n                    slug\n                }\n              }\n            }\n          }\n    }\n`","// 数组去重\n// unit([1, 2, 3, 1])\nexport const unit = (arr) => arr.reduce((result, current) => {\n    if (!result.includes(current)) {\n        result.push(current);\n    }\n\n    return result;\n}, []);"],"sourceRoot":""}