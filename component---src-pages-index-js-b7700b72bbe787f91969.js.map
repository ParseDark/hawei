{"version":3,"sources":["webpack:///./src/utils/utils.js","webpack:///./src/components/RecordArticlesList/index.js","webpack:///./src/components/Tags/index.js","webpack:///./src/components/ArticleCard/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/components/Layout/styles.js","webpack:///./src/components/Layout/index.js"],"names":["unit","arr","reduce","result","current","includes","push","Article","styled","span","MoreText","div","ArticlesList","list","map","node","key","id","to","fields","slug","frontmatter","title","Tag","TagsContainer","Tags","item","Container","ImageContainer","props","banner","TextContainer","Title","Description","ArticleFooter","Line","DateText","BanerTitle","BannerText","ArticleCard","excerpt","date","Atver","NavContainer","AuthorText","IconContainer","Circle","iconColor","ArticleContainer","data","allTag","allTags","edges","tag","site","siteMetadata","author","name","twitter","github","juejin","email","src","href","target","class","header","allMarkdownRemark","query","Header","h5","rhythm","CardBody","Card","children","WebsiteHeaderText","LinkStyle","li","Body","ListLink","Layout","style","listStyle","display"],"mappings":"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","file":"component---src-pages-index-js-b7700b72bbe787f91969.js","sourcesContent":["// 数组去重\n// unit([1, 2, 3, 1])\nexport const unit = (arr) => arr.reduce((result, current) => {\n    if (!result.includes(current)) {\n        result.push(current);\n    }\n\n    return result;\n}, []);","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst Article = styled.span`\n     :hover {\n         text-decoration: underline\n     }\n`;\n\nconst MoreText = styled.div`\n    text-align: right;\n`\n\nconst ArticlesList = ({ list }) => {\n    return (\n        <>\n            {\n                list.map(({ node }) => (\n                    <>\n                        <div key={node.id}>\n                            <span>> </span>\n                            <Link\n                                to={node.fields.slug}\n                            >\n                                <Article>\n                                    {node.frontmatter.title}{\" \"}\n                                </Article>\n                            </Link>\n                        </div>\n                    </>\n                ))\n            }\n            <MoreText>\n                <Link\n                    to=\"/allArticles\"\n                >\n                    <Article>more >></Article>\n                </Link>\n            </MoreText>\n\n        </>\n    )\n}\n\nexport default ArticlesList;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Tag = styled.div`\n    background: rgba(22, 22, 22, .2);\n    padding: .2rem .3rem;\n    display: inline;\n    margin: 0 .3rem .4rem 0;\n`;\n\nconst TagsContainer = styled.div`\n    display: flex;\n    flex-flow: row wrap;\n`;\n\n\nconst Tags = ({ list }) => {\n    return (\n        <TagsContainer>\n            {\n                list.map(item => (\n                    <Tag>{item}</Tag>\n                ))\n            }\n        </TagsContainer>\n    );\n}\n\nexport default Tags;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Container = styled.div`\n    background: #fff;\n    border-radius: .5rem;\n    margin-bottom: 1rem;\n`;\n\nconst ImageContainer = styled.div`\n    background: url(${(props) => props.banner}) no-repeat center center;\n    height: 18rem;\n    border-radius: .5rem .5rem 0 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst TextContainer = styled.div`\n    padding: .5rem 2rem;\n    display: flex;\n    flex-flow: column nowrap;\n`;\n\nconst Title = styled.div`\n    font-size: 2rem;\n    line-height: 2.5rem;\n    position: relative;\n    padding: 1rem 0;\n    cursor: pointer;\n\n    ::after{\n        content: '';\n        background: #decb4c;\n        content: \"\";\n        display: inline-block;\n        width: 2rem;\n        height: .1rem;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        margin-bottom: 1rem;\n    }\n\n    :hover {\n         text-decoration: underline\n     }\n`;\n\nconst Description = styled.div`\n    font-size: .8rem;\n    overflow: hidden;\n    flex: 1;\n`;\nconst ArticleFooter = styled.div`\n    padding: 0 2rem .5rem 2rem;\n`;\n\nconst Line = styled.div`\n    border-top: 1px solid #ececec;\n`;\n\nconst DateText = styled.div`\n    color: #989b9d;\n    padding: 1rem 0;\n    font-size: .8rem;\n`;\n\nconst BanerTitle = styled.div`\n    flex-flow: column nowrap;\n    font-family: 'Oswald', sans-serif;\n    color: #000;\n    font-size: 1.5rem;\n    min-height: 8rem;\n    min-width: 60%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 20px double;\n    border-color: rgba(255, 255, 255, .8);\n`;\n\nconst BannerText = styled.div`\n    padding: 2rem;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(255, 255, 255, .8);\n    width: 100%;\n`;\n\nconst ArticleCard = ({ list }) => {\n    return (\n        <>\n            {\n                list.map(({ node }) => (\n                    <Container>\n                        <ImageContainer banner={node.frontmatter.banner}>\n                            <BanerTitle>\n                                <BannerText>\n                                    {node.frontmatter.title}\n                                </BannerText>\n                            </BanerTitle>\n                        </ImageContainer>\n                        <TextContainer>\n                            <Link\n                                to={node.fields.slug}\n                            >\n                                <Title>\n                                    {node.frontmatter.title}\n                                </Title>\n                            </Link>\n                            <Description>\n                                {node.excerpt}\n                            </Description>\n                        </TextContainer>\n                        <ArticleFooter>\n                            <Line />\n                            <DateText>\n                                {node.frontmatter.date}\n                            </DateText>\n                        </ArticleFooter>\n                    </Container>\n                ))\n            }\n        </>\n    );\n}\n\nexport default ArticleCard;","import React from 'react';\nimport Layout from '../components/Layout/index.js';\nimport { graphql, Link } from \"gatsby\"\nimport styled from 'styled-components';\n\nimport Card from '../components/Card/index.js';\nimport ArticlesList from '../components/RecordArticlesList/index.js';\nimport Tags from '../components/Tags/index.js';\nimport { unit } from '../utils/utils';\nimport ArticleCard from '../components/ArticleCard/index.js';\n\nconst Atver = styled.div`\n    width: 5rem;\n    height: 5rem;\n    border-radius: 50%;\n    background: rgb(238, 207, 85);\n    margin: 1rem 0 2rem 0;\n    position: relative;\n\n    ::before {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        content: 'H';\n        font-size: 4rem;\n        color: #fff;\n    }\n`;\n\nconst NavContainer = styled.div`\n    background: rgb(255, 255, 255);\n    width: 15rem;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: .3rem;\n    padding: 2rem 1rem;\n\n    max-height: 120vh;\n    position: sticky;\n    top: 1rem;    \n`;\n\nconst AuthorText = styled.div`\n    margin-bottom: 1rem;\n`;\n\nconst IconContainer = styled.div`\n    display: flex;\n`;\n\nconst Circle = styled.div`\n    width: 2rem;\n    height: 2rem;\n    border-radius: 50%;\n    background: rgb(238, 207, 85);\n    margin: .5rem;\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #fff;\n    transition: all .2s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    \n\n    i {\n        transition: all .2s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n        color: #fff;\n    }\n\n    :hover {\n        background: #fff;\n    }\n\n    :hover i {\n        color: ${(props) => props.iconColor};\n        transform: scale(2);\n    }\n`;\n\nconst ArticleContainer = styled.div`\n    flex: 1;\n    margin-left: 1rem;\n`;\n\n\n\nexport default ({ data }) => {\n\n    const allTag = unit(data.allTags.edges.map(({ node }) => (node.frontmatter.tag)));\n\n    const {\n        name,\n        twitter,\n        github,\n        juejin,\n        email,\n    } = data.site.siteMetadata.author;\n    return (\n        <Layout>\n            <NavContainer>\n                <Atver src=\"avter.png\" />\n                <AuthorText>\n                    {name}\n                </AuthorText>\n                <IconContainer>\n                    <Circle iconColor=\"rgb(96, 153, 237)\">\n                        <a href={twitter} target=\"__blank\">\n                            <i class=\"fab fa-twitter\"></i>\n                        </a>\n                    </Circle>\n                    <Circle iconColor=\"#24292e\">\n                        <a href={github} target=\"__blank\">\n                            <i class=\"fab fa-github-alt\"></i>\n                        </a>\n                    </Circle>\n                    <Circle iconColor=\"rgb(176, 10, 24)\">\n                        <a href={`mailto:${email}`} target=\"_blank\">\n                            <i class=\"fa fa-envelope\"></i>\n                        </a>\n                    </Circle>\n                    <Circle iconColor=\"rgb(61, 108, 251)\">\n                        <a href={juejin} target=\"__blank\">\n                            <i class=\"fab fa-buffer\"></i>\n                        </a>\n                    </Circle>\n                </IconContainer>\n                <Card header=\"标签\" key=\"标签\">\n                    <Tags list={allTag} />\n                </Card>\n                <Card header=\"最近的帖子\" key=\"最近的帖子\">\n                    <ArticlesList list={data.allMarkdownRemark.edges} />\n                </Card>\n                <Card header=\"系列(数据未完成)\" key=\"系列\">\n                    <ArticlesList list={data.allMarkdownRemark.edges} />\n                </Card>\n            </NavContainer>\n            <ArticleContainer>\n                <ArticleCard list={data.allMarkdownRemark.edges} />\n            </ArticleContainer>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query {\n        site {\n            siteMetadata {\n                title\n                author {\n                    name\n                    github\n                    juejin\n                    twitter\n                    email\n                }\n            }\n\n         \n        }\n        allMarkdownRemark(limit: 10) {\n            totalCount\n            edges {\n              node {\n                id\n                frontmatter {\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                  tag\n                  banner\n                }\n                fields {\n                  slug\n                }\n                excerpt\n              }\n            }\n        }\n        allTags:   allMarkdownRemark(filter: {frontmatter: {tag: {ne: null}}}) {\n            totalCount\n            edges {\n              node {\n                id\n                excerpt\n                frontmatter {\n                  tag\n                  title\n                  date(formatString: \"DD MMMM, YYYY\")\n                }\n                fields {\n                    slug\n                }\n              }\n            }\n          }\n    }\n`","import React from 'react';\nimport styled from 'styled-components';\nimport { rhythm } from \"../../utils/typography\";\n\n\nconst Header = styled.h5`\n    height: ${ rhythm(1)};\n    position: relative;\n    margin: 0 0 .8rem 0;\n    padding: 0 0 .5rem .6rem;\n    border-bottom: solid .05rem #ececec;\n    font-size: 18px;\n    font-size: 1.125rem;\n    text-transform: uppercase;\n\n    ::before {\n        background: #decb4c;\n        content: '';\n        width: 1px;\n\n        content: \"\";\n        display: inline-block;\n        width: .16rem;\n        height: 1.1rem;\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n`;\n\nconst CardBody = styled.div`\n\n`;\n\nconst Container = styled.div`\n    width: 100%;\n    margin: 1rem 0;\n`;\n\nconst Card = ({ header, children }) => {\n    return (\n        <Container>\n            <Header>\n                {header}\n            </Header>\n            <CardBody>\n                {children}\n            </CardBody>\n        </Container>\n    );\n}\n\n\nexport default Card;","import styled from 'styled-components';\nimport { rhythm } from \"../../utils/typography\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    max-width: 70rem;\n    padding: ${rhythm(1)};\n    padding-top: ${rhythm(1.5)};\n`\n\nexport const Header = styled.header`\n    margin-bottom: 1.5rem;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const WebsiteHeaderText = styled.div`\n    text-shadow: none; \n    background-Image: none;\n    display: flex; \n`;\n\nexport const LinkStyle = styled.li`\n    text-transform: uppercase;\n    margin-right: ${rhythm(1.5)};\n    position: relative;\n\n    ::after{\n        content: '';\n        border-bottom: 3px solid #333;\n        width: 0;\n        display: flex;\n        transition: all .2s;\n        position: absolute;\n        transform: translate(-50%, 0);\n        left: 50%;\n    };\n\n    :hover{\n        ::after{\n            width: 100%;\n        } \n    }\n`;\nexport const Body = styled.div`\n    width: 100%;\n    display: flex;\n`;","import React from 'react';\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport {\n    Container,\n    Header,\n    WebsiteHeaderText,\n    LinkStyle,\n    Body,\n} from './styles.js';\n\n\n// 文章布局， 带导航栏\nconst ListLink = props => (\n    <LinkStyle >\n        <Link to={props.to} > {props.children} </Link>\n    </LinkStyle >\n)\n\nconst Layout = ({ children }) => {\n    const data = useStaticQuery(\n        graphql`\n          query {\n                site {\n                siteMetadata {\n                title\n            }\n            }\n          }\n        `\n    )\n    return (\n        <Container>\n            <Header>\n                <WebsiteHeaderText>\n                    <Link to=\"/\">\n                        <h3> {data.site.siteMetadata.title} </h3>\n                    </Link>\n                </WebsiteHeaderText>\n                <ul style={\n                    { listStyle: `none`, display: 'flex' }\n                } >\n                    <ListLink to=\"/allArticles/\">博客</ListLink>\n                    <ListLink to=\"/about/\">关于</ListLink>\n                    <ListLink to=\"/connect/\">联系我</ListLink>\n                </ul>\n            </Header >\n            <Body>\n                {children}\n            </Body>\n        </Container>\n    )\n}\n\n\nexport default Layout;"],"sourceRoot":""}